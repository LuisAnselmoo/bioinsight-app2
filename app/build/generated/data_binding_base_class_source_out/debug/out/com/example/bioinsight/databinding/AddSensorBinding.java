// Generated by view binder compiler. Do not edit!
package com.example.bioinsight.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.EditText;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bioinsight.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class AddSensorBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final EditText inputCo2;

  @NonNull
  public final EditText inputDo;

  @NonNull
  public final EditText inputEc;

  @NonNull
  public final EditText inputHum;

  @NonNull
  public final EditText inputPh;

  @NonNull
  public final EditText inputRtd;

  private AddSensorBinding(@NonNull LinearLayout rootView, @NonNull EditText inputCo2,
      @NonNull EditText inputDo, @NonNull EditText inputEc, @NonNull EditText inputHum,
      @NonNull EditText inputPh, @NonNull EditText inputRtd) {
    this.rootView = rootView;
    this.inputCo2 = inputCo2;
    this.inputDo = inputDo;
    this.inputEc = inputEc;
    this.inputHum = inputHum;
    this.inputPh = inputPh;
    this.inputRtd = inputRtd;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static AddSensorBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static AddSensorBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.add_sensor, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static AddSensorBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.input_co2;
      EditText inputCo2 = ViewBindings.findChildViewById(rootView, id);
      if (inputCo2 == null) {
        break missingId;
      }

      id = R.id.input_do;
      EditText inputDo = ViewBindings.findChildViewById(rootView, id);
      if (inputDo == null) {
        break missingId;
      }

      id = R.id.input_ec;
      EditText inputEc = ViewBindings.findChildViewById(rootView, id);
      if (inputEc == null) {
        break missingId;
      }

      id = R.id.input_hum;
      EditText inputHum = ViewBindings.findChildViewById(rootView, id);
      if (inputHum == null) {
        break missingId;
      }

      id = R.id.input_ph;
      EditText inputPh = ViewBindings.findChildViewById(rootView, id);
      if (inputPh == null) {
        break missingId;
      }

      id = R.id.input_rtd;
      EditText inputRtd = ViewBindings.findChildViewById(rootView, id);
      if (inputRtd == null) {
        break missingId;
      }

      return new AddSensorBinding((LinearLayout) rootView, inputCo2, inputDo, inputEc, inputHum,
          inputPh, inputRtd);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
