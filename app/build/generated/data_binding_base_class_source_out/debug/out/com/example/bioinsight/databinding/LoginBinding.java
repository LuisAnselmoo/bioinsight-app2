// Generated by view binder compiler. Do not edit!
package com.example.bioinsight.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.LinearLayout;
import android.widget.ScrollView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.bioinsight.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LoginBinding implements ViewBinding {
  @NonNull
  private final ScrollView rootView;

  @NonNull
  public final Button btnLogin;

  @NonNull
  public final Button btnRegistrar;

  @NonNull
  public final EditText confirmarPassword;

  @NonNull
  public final LinearLayout layoutLogin;

  @NonNull
  public final LinearLayout layoutRegistro;

  @NonNull
  public final EditText newApellido;

  @NonNull
  public final EditText newNombre;

  @NonNull
  public final EditText newPassword;

  @NonNull
  public final EditText newUsuario;

  @NonNull
  public final EditText passwordInput;

  @NonNull
  public final TextView titleLoginText;

  @NonNull
  public final TextView titleRegistroText;

  @NonNull
  public final TextView tvToggle;

  @NonNull
  public final EditText usernameInput;

  private LoginBinding(@NonNull ScrollView rootView, @NonNull Button btnLogin,
      @NonNull Button btnRegistrar, @NonNull EditText confirmarPassword,
      @NonNull LinearLayout layoutLogin, @NonNull LinearLayout layoutRegistro,
      @NonNull EditText newApellido, @NonNull EditText newNombre, @NonNull EditText newPassword,
      @NonNull EditText newUsuario, @NonNull EditText passwordInput,
      @NonNull TextView titleLoginText, @NonNull TextView titleRegistroText,
      @NonNull TextView tvToggle, @NonNull EditText usernameInput) {
    this.rootView = rootView;
    this.btnLogin = btnLogin;
    this.btnRegistrar = btnRegistrar;
    this.confirmarPassword = confirmarPassword;
    this.layoutLogin = layoutLogin;
    this.layoutRegistro = layoutRegistro;
    this.newApellido = newApellido;
    this.newNombre = newNombre;
    this.newPassword = newPassword;
    this.newUsuario = newUsuario;
    this.passwordInput = passwordInput;
    this.titleLoginText = titleLoginText;
    this.titleRegistroText = titleRegistroText;
    this.tvToggle = tvToggle;
    this.usernameInput = usernameInput;
  }

  @Override
  @NonNull
  public ScrollView getRoot() {
    return rootView;
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LoginBinding inflate(@NonNull LayoutInflater inflater, @Nullable ViewGroup parent,
      boolean attachToParent) {
    View root = inflater.inflate(R.layout.login, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LoginBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnLogin;
      Button btnLogin = ViewBindings.findChildViewById(rootView, id);
      if (btnLogin == null) {
        break missingId;
      }

      id = R.id.btnRegistrar;
      Button btnRegistrar = ViewBindings.findChildViewById(rootView, id);
      if (btnRegistrar == null) {
        break missingId;
      }

      id = R.id.confirmarPassword;
      EditText confirmarPassword = ViewBindings.findChildViewById(rootView, id);
      if (confirmarPassword == null) {
        break missingId;
      }

      id = R.id.layoutLogin;
      LinearLayout layoutLogin = ViewBindings.findChildViewById(rootView, id);
      if (layoutLogin == null) {
        break missingId;
      }

      id = R.id.layoutRegistro;
      LinearLayout layoutRegistro = ViewBindings.findChildViewById(rootView, id);
      if (layoutRegistro == null) {
        break missingId;
      }

      id = R.id.newApellido;
      EditText newApellido = ViewBindings.findChildViewById(rootView, id);
      if (newApellido == null) {
        break missingId;
      }

      id = R.id.newNombre;
      EditText newNombre = ViewBindings.findChildViewById(rootView, id);
      if (newNombre == null) {
        break missingId;
      }

      id = R.id.newPassword;
      EditText newPassword = ViewBindings.findChildViewById(rootView, id);
      if (newPassword == null) {
        break missingId;
      }

      id = R.id.newUsuario;
      EditText newUsuario = ViewBindings.findChildViewById(rootView, id);
      if (newUsuario == null) {
        break missingId;
      }

      id = R.id.passwordInput;
      EditText passwordInput = ViewBindings.findChildViewById(rootView, id);
      if (passwordInput == null) {
        break missingId;
      }

      id = R.id.titleLoginText;
      TextView titleLoginText = ViewBindings.findChildViewById(rootView, id);
      if (titleLoginText == null) {
        break missingId;
      }

      id = R.id.titleRegistroText;
      TextView titleRegistroText = ViewBindings.findChildViewById(rootView, id);
      if (titleRegistroText == null) {
        break missingId;
      }

      id = R.id.tvToggle;
      TextView tvToggle = ViewBindings.findChildViewById(rootView, id);
      if (tvToggle == null) {
        break missingId;
      }

      id = R.id.usernameInput;
      EditText usernameInput = ViewBindings.findChildViewById(rootView, id);
      if (usernameInput == null) {
        break missingId;
      }

      return new LoginBinding((ScrollView) rootView, btnLogin, btnRegistrar, confirmarPassword,
          layoutLogin, layoutRegistro, newApellido, newNombre, newPassword, newUsuario,
          passwordInput, titleLoginText, titleRegistroText, tvToggle, usernameInput);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
